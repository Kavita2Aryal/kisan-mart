$(document).ready(function () {
    $('body')
        .append('<input type="hidden" class="current-use-media">')
        .append('<input type="hidden" class="current-use-media-type" value="single">')
        .append('<input type="hidden" class="current-use-media-texteditor" value="0">');
});
$(document).on('click', '.close-use-media', function (e) {
    e.preventDefault();
    hide_media();
    remove_media();
});
$(document).on('click', '.open-use-media', function (e) {
    e.preventDefault();
    var $this = $(this);
    var type = $this.data('type-media');
    $('label.image-error').remove();
    set_current_media_type(type);
    set_current_media($this.attr('id'));
    ($('.modal.modal-use-media.' + type).length > 0) ? open_media() : show_media();
});
$(document).on('click', '.paging-use-media .page-link', function (e) {
    e.preventDefault(); var $this = $(this);
    if ($this.parents('.page-item').hasClass('active')) return false;
    get_media($this.attr('href') + '&search=' + $('.search-use-media').val());
    paging_media($this);
});
$(document).on('keypress', '.search-use-media', function (e) {
    if (e.which == 13 || e.keyCode == 13) {
        get_media(media_url + '?search=' + $('.search-use-media').val());
    }
});
$(document).on('click', '.btn-search-use-media', function (e) {
    e.preventDefault();
    get_media(media_url + '?search=' + $('.search-use-media').val());
});
$(document).on('click', '.btn-refresh-use-media', function (e) {
    e.preventDefault();
    $('.search-use-media').val('');
    get_media(media_url);
});
$(document).on('click', '.clear-multiple-use-media', function (e) {
    e.preventDefault();
    $(this).parents('.tab-pane').find('.item-use-media:checked').prop('checked', false);
});
$(document).on('click', '.remove-use-media', function (e) {
    e.preventDefault();
    $(this).parents('.populate-media').hide('fast', function () {
        $(this).remove();
        if (typeof sortable_image_sort_index === 'function') {
            sortable_image_sort_index();
        }
    });
});
$(document).on('click', '.single-use-media', function (e) {
    e.preventDefault();
    get_current_media_texteditor() == 0
        ? populate_media_single($(this))
        : populate_media_texteditor($(this));
    hide_media();
    remove_media();
});
$(document).on('click', '.multiple-use-media', function (e) {
    e.preventDefault();
    populate_media_multiple($(this));
    hide_media();
    remove_media();
});

var set_current_media_texteditor = function (index) {
    $('.current-use-media-texteditor').val(index);
}
var get_current_media_texteditor = function () {
    return $('.current-use-media-texteditor').val();
}
var set_current_media_type = function (type) {
    $('.current-use-media-type').val(type);
}
var get_current_media_type = function () {
    return $('.current-use-media-type').val();
}
var set_current_media = function (id) {
    $('.current-use-media').val(id);
}
var get_current_media = function () {
    return $('.current-use-media').val();
}
var open_media = function () {
    var type = get_current_media_type();
    $('.modal.modal-use-media.' + type).modal('show');
}
var hide_media = function () {
    var type = get_current_media_type();
    $('.modal.modal-use-media').modal('hide');
    $('.modal.modal-use-media').find('#select-image-' + type).addClass('active');
    $('.modal.modal-use-media').find('#upload-image-' + type).removeClass('active');
    $('.modal.modal-use-media').find('[data-target="#select-image-' + type + '"]').addClass('active');
    $('.modal.modal-use-media').find('[data-target="#upload-image-' + type + '"]').removeClass('active');
}
var remove_media = function () {
    if ($('.upload-media-container .media-masonry').find('.media-masonry-item').length > 0) {
        setTimeout(function () { $('.modal.modal-use-media').remove(); }, 1000);
    }
}
var show_media = function () {
    var type = get_current_media_type();
    $.ajax({
        url: media_url,
        type: 'POST',
        data: { type: type, full: 10 },
        success: function (response) {
            $('body').append(response.html);
            open_media(type);
            upload_init(type);
            current_page_fix();
        }
    });
}
var get_media = function (url) {
    $.ajax({
        url: url,
        type: 'POST',
        data: { type: get_current_media_type(), full: 0 },
        success: function (response) {
            $('.modal.modal-use-media').find('.use-media-parent').html(response.html);
        }
    });
}
var paging_media = function ($this) {
    $('.modal.modal-use-media.show').find('.paging-use-media').find('.page-item').removeClass('active');
    $this.parents('.page-item').addClass('active');
}
var current_page_fix = function () {
    var type = get_current_media_type();
    var $current = $('.modal.modal-use-media.' + type).find('.paging-use-media').find('.page-item.active');
    var page = $current.find('.page-link').text();
    $current.html('<a class="page-link" href="' + media_url + '?page=' + page + '">' + page + '</a>');
}
var upload_init = function () {
    var type = get_current_media_type();
    Dropzone.autoDiscover = false;
    var myDropzone2 = new Dropzone(".dropzone-media-modal-" + type, {
        url: upload_modal_url,
        headers: { 'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content') },
        thumbnailWidth: 240,
        thumbnailHeight: 240,
        addRemoveLinks: true,
        paramName: "image",
        acceptedFiles: "image/*,pdf",
        maxFilesize: 5,
        maxFiles: 12,
        uploadMultiple: false,
        autoProcessQueue: true,
        parallelUploads: 1,
        accept: function (file, done) {
            var reader = new FileReader();
            reader.onload = (function (elem) {
                var image = new Image();
                image.src = elem.target.result;
                image.onload = function () {
                    if (this.width < min_width || this.height < min_height) {
                        notify_circle('danger', 'Error', 'Invalid dimensions', '<i class="pg-icon">alert_info</i>');
                        done("Invalid dimensions");
                    }
                    else { done(); }
                };
            });
            reader.readAsDataURL(file);
        },
        init: function () {
            this.on("sending", function (file, xhr, formData) {
                formData.append("type", type);
            });
            this.on("success", function (file, response) {
                if (response.status == 'success') {
                    $('.modal-use-media.' + type).find('.upload-media-container .media-masonry').append(response.html);
                    notify_circle('success', 'Success', 'One Image Uploaded', '<i class="pg-icon">alert_info</i>');
                }
                else {
                    notify_circle('danger', 'Error', 'Something went wrong', '<i class="pg-icon">alert_info</i>');
                }
                myDropzone2.removeFile(file);
            });
            this.on("maxfilesexceeded", function (file) {
                myDropzone2.removeFile(file);
                notify_circle('danger', 'Warning', 'Only 12 files allowed', '<i class="pg-icon">alert_info</i>');
            });
        }
    });
}
var populate_media_single = function ($this) {
    var $parent = $this.parents('.media-options');
    var $current = $('#' + get_current_media());
    var content = '<div class="populate-media"><a href="' + $parent.find('.image-max').val() + '" target="_blank"><img src="' + $parent.find('.image-min').val() + '" class="full-width"></a></div>';
    $($current.data('populate-media')).html(content);
    $($current.data('populate-value')).val($parent.find('.image-index').val());
    $('.populate-container').show();
    hide_media();
}
var populate_media_multiple = function ($this) {
    if ($this.parents('.tab-pane').find('.item-use-media:checked').length > 0) {
        var content = '';
        var $current = $('#' + get_current_media());
        var name = $current.data('populate-name');
        $this.parents('.tab-pane').find('.item-use-media:checked').each(function (i, v) {
            var $parent = $(this).parents('.media-options');
            content +=
                '<div class="media-masonry-item populate-media" id="' + indexing() + '">' +
                '<div class="media-image">' +
                '<input type="hidden" class="is-required" name="' + name + '" value="' + $parent.find('.image-index').val() + '">' +
                '<a href="' + $parent.find('.image-max').val() + '" target="_blank">' +
                '<img src="' + $parent.find('.image-min').val() + '" class="full-width">' +
                '</a></div>' +
                '<div class="media-options">' +
                '<div class="pull-left"><strong class="media-display-order"></strong></div>' +
                '<div class="pull-right">' +
                '<button type="button" class="btn btn-link text-danger remove-use-media"><i class="pg-icon">close_lg</i></button>' +
                '</div><div class="clearfix"></div></div></div>';
        });
        $($current.data('populate-media')).append(content);
        $this.parents('.tab-pane').find('.item-use-media:checked').prop('checked', false);
        hide_media();
    }
    else {
        notify_circle('danger', 'Please select', 'at least one image', '<i class="pg-icon">alert_info</i>');
    }
}
var populate_media_texteditor = function ($this) {
    var index = get_current_media_texteditor();
    var $parent = $this.parents('.media-options');
    var image = $('<img style="width: 100%; float: left;" class="note-float-left">').attr('src', $parent.find('.image-max').val());
    $('.editor-container-' + index).summernote("insertNode", image[0]);
    set_current_media_texteditor(0);
}