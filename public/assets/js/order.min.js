$(document).on('click', '.btn-order-status', function (e) {
    e.preventDefault();
    var $this = $(this);
    var order_code = $this.data('code');

    Swal.fire({
        title: 'Write Remarks!',
        input: 'text',
        inputLabel: 'Message',
        inputPlaceholder: 'Write Remarks ...',
        inputAttributes: {
            'aria-label': 'Write Remark'
        },
        showCancelButton: true,
        preConfirm: (inputValue) => {
            if (inputValue === false) return false;
            if (inputValue === "") {
                swal.showValidationMessage(`You need to write remarks!`);
                return false
            }
        }
    }).then((result) => {
        if (result.dismiss == "cancel") {
            return false;
        } else {
            $('#navigate-away-check').val(0);
            if ($this.data('type') == 'confirm') {
                url = confirm_order_url;
            }
            else if ($this.data('type') == 'ship') {
                url = ship_order_url;
            }
            else if ($this.data('type') == 'deliver') {
                url = deliver_order_url;
            }
            else if ($this.data('type') == 'cancel') {
                url = cancel_order_url;
            }
            else if ($this.data('type') == 'refund') {
                url = refund_order_url;
            }

            $.ajax({
                type: 'post',
                url: url,
                data: { order_code: order_code, remarks: result.value, order_status: $this.data('type') },
                async: false,
                success: function (response) {
                    if (response.status) {
                        window.location.href = response.url;
                    }
                    else {
                        Swal.fire("Sorry!", "Cannot change the status at the moment.", "error");
                    }
                }
            })
        }
    });
})

$(document).on('click', '.btn-view-order-detail', function () {
    var code = $(this).data('code');
    $.ajax({
        type: 'post',
        url: admin_get_order_detail_url,
        data: { code: code },
        async: false,
        success: function (response) {
            if (response.status) {
                var product_list_content = '';

                var currency_to_show = response.currency;
                var ex_rate = response.rate;

                var order_id = response.data.id;
                var subtotal = 0;
                var total = 0;
                var index = 0;
                var current_status = response.data.current_status;
                var order_current_status = response.order_status[current_status];

                $.each(response.data_details, function (i, row) {
                    index++;
                    var order_detail_lists = '<input type="hidden" name="order_detail_id" value="' + row.id + '">' +
                        '<input type="hidden" name="order_id" value="' + order_id + '">' +
                        '<input type="hidden" name="product_id" value="' + row.product.id + '">' +
                        '<input type="hidden" name="qty" class="product-qty-' + row.id + '" value="' + row.qty + '">' +
                        '<input type="hidden" name="price" class="product-price-' + row.id + '" value="' + row.price + '">';

                    var option = '';
                    for (var j = 1; j <= row.variation.qty; j++) {
                        (row.qty == j) ?
                            option += '<option j="' + j + '" selected>' + j + '</option>'
                            :
                            option += '<option j="' + j + '">' + j + '</option>';
                    }

                    var total_amount = row.price * row.qty;
                    subtotal += total_amount;
                    var remove_button = '';
                    var update_button = '';
                    if (order_current_status === "Pending") {
                        remove_button = '<button class="btn btn-link btn-link-fix p-l-10 p-r-10 m-b-5 text-danger btn-remove-order" data-order-detail-sku="' + row.product_sku + '" data-order-detail-id="' + row.id + '" data-order-id="' + order_id + '">' +
                            'REMOVE' +
                            '</button>';
                        update_button = '<button class="btn btn-link btn-link-fix p-l-10 p-r-10 m-b-5 m-r-10 text-success btn-update-order" data-order-detail-sku="' + row.product_sku + '" data-order-detail-id="' + row.id + '" data-order-id="' + order_id + '">' +
                            'UPDATE' +
                            '</button>';
                        qty_option = '<select class="quantity-option" data-id="' + row.id + '">' + option + '</select>';
                    } else {
                        qty_option = row.qty;
                    }
                    product_list_content +=
                        '<tr class="order-detail-list-' + row.id + '">' +
                        '<td class="text-black">' + index + '</td>' +
                        '<td class="text-black">' + row.product.name + '</td>' +
                        '<td class="text-center">' + currency_to_show + '</td>' +
                        '<td class="text-center">' + qty_option + '</td>' +
                        '<td class="text-center">' + row.variation.qty + '</td>' +
                        '<td class="text-center">' + currency_to_show + ' ' + row.actual_price + '</td>' +
                        '<td class="text-center">' + currency_to_show + ' ' + row.price + '</td>' +
                        '<td class="text-center order-detail-subtotal-' + row.id + '">' + currency_to_show + ' ' + total_amount + '</td>' +
                        '<td class="text-center">' +
                        update_button +
                        remove_button +
                        "</td>" +
                        order_detail_lists +
                        '</tr>';

                });


                var delivery_charge_amount = response.data.delivery_charge;
                var discount_amount = response.data.discount_amount;
                var vat_amount = response.data.vat_amount;
                $('.order-product-list-container').html(product_list_content);

                total = subtotal + delivery_charge_amount - discount_amount;
                var $modal = $('.modal-view-order-detail');
                $modal.find('.btn-order-detail-modal-close').data('status', order_current_status);
                $modal.find('.currency').html(currency_to_show);
                $modal.find('.total-amount').html(currency_to_show + ' ' + total);
                $modal.find('.subtotal-amount').html(currency_to_show + ' ' + subtotal);
                $modal.find('.discount-amount').html(currency_to_show + ' ' + discount_amount);
                $modal.find('.vat-amount').html(currency_to_show + ' ' + vat_amount);
                $modal
                    .find(".delivery-charge-amount")
                    .html(currency_to_show + " " + delivery_charge_amount);

                if (response.data.customer != null) {
                    $modal.find('.customer-name').html(response.data.customer.name.toUpperCase());
                    $modal.find('.customer-phone').html(response.data.customer.phone);
                    $modal.find('.customer-email').html(response.data.customer.email);
                }
                var created_date = response.data.created_at;

                $modal.find('.show-order-code').html(code);
                $modal.find('.show-order-placed-on').html(moment(created_date).format('YYYY-MM-DD'));
                $modal.find('.show-order-status').html(order_current_status);

                $modal.find('.show-billing-address .full-name').html(response.data_billing_address.full_name);
                $modal.find('.show-billing-address .phone-number').html(response.data_billing_address.phone_number);
                response.data_billing_address.address_line_1 != null ? $modal.find('.show-billing-address .address-line-1').html(response.data_billing_address.address_line_1 + ',') : '';
                if ((response.data_billing_address.get_country) !== null && (response.data_billing_address.get_country) !== 0) {
                    response.data_billing_address.address_line_2 != null ? $modal.find('.show-billing-address .address-line-2').html(response.data_billing_address.address_line_2 + ',') : '';
                    response.data_billing_address.city != null ? $modal.find('.show-billing-address .city').html(response.data_billing_address.get_city.name + ',') : '';
                    response.data_billing_address.region != null ? $modal.find('.show-billing-address .region').html(response.data_billing_address.get_region.name + ',') : '';
                    response.data_billing_address.area != null ? $modal.find('.show-billing-address .area').html(response.data_billing_address.get_area.name + ',') : '';
                    $modal.find('.show-billing-address .country').html(response.data_billing_address.get_country.country_name);
                }

                $modal.find('.show-shipping-address .full-name').html(response.data_shipping_address.full_name);
                $modal.find('.show-shipping-address .phone-number').html(response.data_shipping_address.phone_number);
                response.data_shipping_address.address_line_1 != null ? $modal.find('.show-shipping-address .address-line-1').html(response.data_shipping_address.address_line_1 + ',') : '';
                if (response.data_shipping_address.get_country != null && (response.data_shipping_address.get_country) !== 0) {
                    response.data_shipping_address.address_line_2 != null ? $modal.find('.show-shipping-address .address-line-2').html(response.data_shipping_address.address_line_2 + ',') : '';
                    response.data_billing_address.city != null ? $modal.find('.show-shipping-address .city').html(response.data_shipping_address.get_city.name + ',') : '';
                    response.data_billing_address.region != null ? $modal.find('.show-shipping-address .region').html(response.data_shipping_address.get_region.name + ',') : '';
                    response.data_billing_address.area != null ? $modal.find('.show-shipping-address .area').html(response.data_shipping_address.get_area.name + ',') : '';
                    $modal.find('.show-shipping-address .country').html(response.data_shipping_address.get_country.country_name);
                }
                $modal.find('.show-shipping-address .delivery-instruction').html(response.data_shipping_address.delivery_instructions);
                if (response.cancel_order_details > 0) {
                    $modal.find('.btn-view-cancel-order-detail').removeClass('display-none');
                    $add_code = $modal.find('.btn-view-cancel-order-detail').data('code', response.data.order_code);
                }
                $modal.modal('show');
            }
        }
    })
})

$(document).on('click', '.btn-order-detail-modal-close', function (e) {
    if (typeof $(this).data('status') !== 'undefined' && $(this).data('status') == 'Pending') {
        location.reload();
    }
});

$(document).on('change', '.quantity-option', function (e) {
    e.preventDefault();
    var order_detail_id = $(this).data("id");
    var value = this.value;

    $('.product-qty-' + order_detail_id).val(value);
});

$(document).on("click", ".btn-remove-order", function (e) {
    e.preventDefault();
    if(order_detail_count > 1)
    {
        var order_detail_id = $(this).data("order-detail-id");
        var order_id = $(this).data("order-id");
        swal.fire({
            title: 'Are You Sure?',
            icon: 'warning',
            input: 'text',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, Remove it.',
            closeOnConfirm: false,
            inputPlaceholder: "Write Remark",
            preConfirm: (inputValue) => {
                if (inputValue === false) return false;
                if (inputValue === "") {
                    swal.showValidationMessage(`You need to write remark!`);
                    return false
                }
            }
        }).then((result) => {
            if (result.dismiss == "cancel") {
                return false;
            } else {
                $.ajax({
                    type: "post",
                    url: remove_order_detail_url,
                    data: {
                        order_id: order_id,
                        order_detail_id: order_detail_id,
                        remarks: result.value,
                    },
                    async: false,
                    success: function (response) {
                        if (response.status) {
                            notify_reload('success', response.message);
                            // $(".order-product-list-container").find('.order-detail-list-' + order_detail_id).remove();
                            // $(".subtotal-amount").html(response.order.sub_total);
                            // $(".delivery-charge-amount").html(response.order.delivery_charge)
                            // $(".total-amount").html(response.order.total)
                            // $(".discount-amount").html(response.order.discount_amount)
                        } else {
                            Swal.fire(
                                "Sorry!",
                                "Cannot remove the order detail at the moment.",
                                "error"
                            );
                        }
                    },
                });
            }
        });
    }else{
        notify_bar('danger', 'Please cancel this order if you want to delete this item.');
    }
});

$(document).on("click", ".btn-update-order", function (e) {
    e.preventDefault();
    var order_detail_id = $(this).data("order-detail-id");
    var order_id = $(this).data("order-id");
    var product_sku = $(this).data("order-detail-sku");
    var value = $('.product-qty-' + order_detail_id).val();

    $.ajax({
        type: "post",
        url: update_order_detail_url,
        data: {
            order_id: order_id,
            order_detail_id: order_detail_id,
            product_sku: product_sku,
            qty: value,
        },
        async: false,
        success: function (response) {
            if (response.status) {
                notify_reload('success', response.message);
                // $(".order-product-list-container").find('.order-detail-subtotal-' + order_detail_id).html('');
                // $(".order-product-list-container").find('.order-detail-subtotal-' + order_detail_id).html(response.item_subtotal);
                // $(".subtotal-amount").html(response.order.sub_total);
                // $(".delivery-charge-amount").html(response.order.delivery_charge)
                // $(".total-amount").html(response.order.total)
                // $(".discount-amount").html(response.order.discount_amount)
            } else {
                Swal.fire(
                    "Sorry!",
                    "Cannot update the order detail at the moment.",
                    "error"
                )
            }
        },
    });
});

$(document).on('click', '.btn-view-cancel-order-detail', function () {
    var code = $(this).data('code');
    $.ajax({
        type: 'post',
        url: admin_get_cancel_order_detail_url,
        data: { code: code },
        async: false,
        success: function (response) {
            if (response.status) {
                var $content = response.html;
                var $modal = $('#cancelled-item-modal');
                $modal.html($content);
            }
        }
    })
});
