$(document).on('click', '.content-tab', function (e) {
    e.preventDefault();
    var $this = $(this);
    var index = $this.data('index');
    if (index == 'page--header') {
        notify_bar('warning', 'Nothing to edit in the header.');
        return false;
    }
    else if (index == 'page--footer') {
        notify_bar('warning', 'Nothing to edit in the footer.');
        return false;
    }
    $('.content-tab .card').removeClass('bg-danger-lighter');
    $('.content-tab .card-body').addClass('p-0');
    $('.content-form').removeClass('content-active');

    $this.find('.card').addClass('bg-danger-lighter');
    $this.find('.card-body').removeClass('p-0');
    $('#'+index).addClass('content-active');

    $("html, body").animate({scrollTop: 0}, 500);

    if (history.pushState) {
        var newurl = window.location.protocol + "//" + window.location.host + window.location.pathname + '?section=' + $this.data('section');
        window.history.pushState({path:newurl},'',newurl);
    }
});
$(document).on('click', '.refresh-slider', function () {
    $.ajax({
        type : 'GET',
        url  : $(this).data('url'),
        success: function (response) {
            var options = '<option value="">select a slider</option>';
            if (response.sliders) {
                $.each(response.sliders, function(i, row) {
                    options += '<option value="'+row['id']+'">'+row['name']+'</option>';
                });
            }
            $('.select-slider').each(function () {
                var value = $(this).val();
                $(this).html(options);
                $(this).find('option[value="'+value+'"]').prop('selected', true);
                $(this).select2();
            });
            notify_bar('info', 'Slider list has been refreshed.');
        }
    })
});
$(document).on('click', '.btn-remove', function (e) {
    e.preventDefault(); 
    var $this = $(this);
    Swal.fire({
        title: 'Are you sure?',
        text: "",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, remove it!'
    }).then((result) => {
        if (result.value) {
            $this.parents('.parent-section').hide('fast', function () { $(this).remove(); });
        }
    });
});
$(document).on('click', '.btn-collapse', function (e) {
    e.preventDefault(); 
    var $this = $(this);
    var icon = $this.find('i.pg-icon').text();
    $($this.data('target')).slideToggle('fast');
    $this.find('i.pg-icon').text(icon == 'chevron_up' ? 'chevron_down' : 'chevron_up');
});
$(document).on('click', '.btn-description-add', function (e) {
    e.preventDefault();
    var $parent = $(this).parents('.content-form');
    var iding = indexing();
    $.ajax({
        url: $('.page-management').data('generate'),
        type: 'POST',
        data: {
            type: 'description',
            indexing: iding,
            index: $parent.data('index'),
            count: $parent.find('.section-description').length + 1
        },
        async: false,
        success: function (response) {
            if (response.html) {
                $parent.find('.section-description-parent').append(response.html);
                summernote_init();
            }
            else {
                notify_bar('danger', 'Something went wrong.');
            }
        }
    });
});
$(document).on('click', '.btn-link-add', function (e) {
    e.preventDefault();
    var $parent = $(this).parents('.content-form');
    $.ajax({
        url: $('.page-management').data('generate'),
        type: 'POST',
        data: {
            type: 'link',
            index: $parent.data('index'),
            count: $parent.find('.section-link').length + 1
        },
        async: false,
        success: function (response) {
            if (response.html) {
                $parent.find('.section-link-parent').append(response.html);
            }
            else {
                notify_bar('danger', 'Something went wrong.');
            }
        }
    });
});
$(document).on('click', '.btn-list-body-add', function (e) {
    e.preventDefault();
    var iding = indexing();
    var $this = $(this);
    var $list = $this.parents('.list-body-section');
    var $parent = $this.parents('.content-form');

    $.ajax({
        url: $('.page-management').data('generate'),
        type: 'POST',
        data: {
            type: 'list_body',
            indexing: iding,
            index: $parent.data('index'),
            count: $list.find('.list-body-item').length + 1,
            group: $list.data('group'),
            list_config_body: $this.data('config')
        },
        async: false,
        success: function (response) {
            if (response.html) {
                $list.find('.section-list-body-parent').append(response.html);
                load_icon_option();
                summernote_init();
                tippy('[data-tippy-content]');
            }
            else {
                notify_bar('danger', 'Something went wrong.');
            }
        }
    });
});
$(document).on('click', '.btn-submit', function (e) {
    e.preventDefault();
    var $form = $(this).parents('form');
    if (check_submission(e, $form)) {
        setTimeout(function () { $form.submit(); }, 700);
    }
});
$(document).on('change', '.typecontent-checkbox', function (e) { 
    var $this = $(this);
    if ($this.is(':checked')) {
        var index = 0;
        var order = $sort.sortable( "toArray"); 
        $.each(order, function (i, item) {
            $item = $('#'+item); 
            if ($item.find('.typecontent-checkbox').is(':checked')) { 
                $item.find('.display-order-value').val(++index);
            }
        })
    }
    else {
        $this.parents('.card-title').find('.display-order-value').val(0);
    }
});
var sortable_type_content = function ($sortTypeItem) {
    $sortTypeItem.sortable({
        connectWith: $sortTypeItem.attr('class').trim().replace(' ', '.'),
        handle: ".card-header",
        cancel: ".portlet-close",
        placeholder: "sortable-box-placeholder round-all",
        forcePlaceholderSize: true,
        tolerance: 'pointer',
        forceHelperSize: true,
        revert: true,
        helper: 'original',
        opacity: 0.8,
        iframeFix: false
    });
    $sortTypeItem.on('sortupdate', function() {
        var index = 0;
        var order = $sortTypeItem.sortable("toArray");
        $.each(order, function (i, item) {
            $item = $('#'+item);
            if ($item.find('.typecontent-checkbox').is(':checked')) {
                $item.find('.display-order-value').val(index++);
            }
        })
    });  
}
var sortable_list_link = function ($sortListLinkItem) {
    $sortListLinkItem.sortable({
        connectWith: $sortListLinkItem.attr('class').trim().replace(' ', '.'),
        handle: ".card-header",
        cancel: ".portlet-close",
        placeholder: "sortable-box-placeholder round-all",
        forcePlaceholderSize: true,
        tolerance: 'pointer',
        forceHelperSize: true,
        revert: true,
        helper: 'original',
        opacity: 0.8,
        iframeFix: false
    });
    $sortListLinkItem.on('sortupdate', function() {
        var index = 1;
        var order = $sortListLinkItem.sortable("toArray");
        $.each(order, function (i, item) {
            $('#'+item).find('.display-order-value').val(index++);
        });
    });
}
var sortable_list = function ($sortListItem) {
    $sortListItem.sortable({
        connectWith: $sortListItem.attr('class').trim().replace(' ', '.'),
        handle: ".card-header",
        cancel: ".portlet-close",
        placeholder: "sortable-box-placeholder round-all",
        forcePlaceholderSize: true,
        tolerance: 'pointer',
        forceHelperSize: true,
        revert: true,
        helper: 'original',
        opacity: 0.8,
        iframeFix: false
    });
    $sortListItem.on('sortupdate', function() {
        var index = 1;
        var order = $sortListItem.sortable("toArray"); 
        $.each(order, function (i, item) {
            $('#'+item).find('.display-order-value').val(index++);
        });
    });
}
var sortable_image = function ($sortImageItem) {
    $sortImageItem.sortable({
        connectWith: $sortImageItem.attr('class').trim().replace(' ', '.'),
        handle: ".media-image",
        cancel: ".portlet-close",
        placeholder: "sortable-box-placeholder round-all",
        forcePlaceholderSize: true,
        tolerance: 'pointer',
        forceHelperSize: true,
        revert: true,
        helper: 'original',
        opacity: 0.8,
        iframeFix: false
    });
    $sortImageItem.on('sortupdate', function() {
        var index = 0;
        var order = $sortImageItem.sortable("toArray");  console.log(order, 'image');
        $.each(order, function (i, item) {
            $item = $('#'+item); index++;
            var name = $item.find('.media-image').find('input[type=hidden]').attr('name'); 
            var name_alt = name.slice(0, -1) + index + ']';
            $item.find('.media-image').find('input[type=hidden]').attr('name', name_alt);
            $item.find('.media-display-order').text(index);
        });
        sortable_image_sort_index($sortImageItem);
    });
}
var sortable_image_sort_index = function ($parent) {
    var index = 0;
    $parent.find('.media-masonry-item').each(function () {
        $(this).find('.media-display-order').text(++index);
    });
}
var check_submission = function (e, $form) {
    e.preventDefault();
    var bool = true;
    $('label.error').remove();

    $form.find('.open-use-media.is-required').each(function () {
        var $this = $(this);
        if ($this.data('type-media') == 'multiple') {
            var name   = $this.data('populate-name'); 
            var target = $this.data('populate-media');
            var limit  = $this.data('limit');
            var min    = $this.data('min'); 
            var count  = $(target).find('.media-image').length;  // $(target).find('[name="'+name+'"]').length;
            if (count > limit) {
                $this.after('<label class="error image-error">Please select at most '+limit+' image(s).</label>');
                bool = false;
            }
            else if (count < min) {
                $this.after('<label class="error image-error">Please select at leaset '+min+' image(s).</label>');
                bool = false;
            }
        }
        else {
            var target = $this.data('populate-value');
            if ($(target).val() == 0) {
                $this.after('<label class="error image-error">Please select at most 1 image(s).</label>');
                bool = false;
            }
        }
    });

    var check = $.ajax({
        url: $('.page-management').data('check'),
        data: $form.serialize(),
        type: 'PUT', async: false,
        success: function (response) { return response; }
    }).responseJSON; 

    if (check.hasOwnProperty("errors")) { 
        bool = false;
        for (var key in check.errors) {
            var type = '';
            if (check.errors.hasOwnProperty(key)) { 
                var $error = null;
                var keys = key.split('.');
                if (keys.length == 1) {
                    $error = $('[name='+key+']');
                }
                else if (keys.length == 2) {
                    $error = $('[name="'+keys[0]+'['+keys[1]+']"]');
                }
                else if (keys.length == 3) {
                    $error = $('[name="'+keys[0]+'['+keys[1]+']['+keys[2]+']"]');
                }
                else if (keys.length == 4) {
                    $error = $('[name="'+keys[0]+'['+keys[1]+']['+keys[2]+']['+keys[3]+']"]'); 
                    type = keys[2];
                }
                else if (keys.length == 5) {
                    $error = $('[name="'+keys[0]+'['+keys[1]+']['+keys[2]+']['+keys[3]+']['+keys[4]+']"]');
                    type = keys[2];
                }
                else if (keys.length == 6) {
                    $error = $('[name="'+keys[0]+'['+keys[1]+']['+keys[2]+']['+keys[3]+']['+keys[4]+']['+keys[5]+']"]');
                    type = keys[5];
                }
                else if (keys.length == 7) {
                    $error = $('[name="'+keys[0]+'['+keys[1]+']['+keys[2]+']['+keys[3]+']['+keys[4]+']['+keys[5]+']['+keys[6]+']"]');
                    type = keys[6];
                }

                if ($error != null) {
                    if (type == 'description') {
                        $error.after('<label class="error m-b-0 m-t-10">'+check.errors[key]+'</label>');
                    }
                    else if (type == 'slider') {
                        $error.parents('.form-group').append('<label class="error m-b-0 m-t-10">'+check.errors[key]+'</label>');
                    }
                    else {
                        $error.after('<label class="error">'+check.errors[key]+'</label>');
                    }
                }
            }
        }
    } 

    if (!bool) notify_bar('danger', 'Please fill all the required data before proceeding.');
    return bool;
}
$('.sortable.sortable-image').each(function () {
    sortable_image($(this));
});
$('.sortable.sortable-list-link').each(function () {
    sortable_list_link($(this));
});
$('.sortable.sortable-list').each(function () {
    sortable_list($(this));
});
$('.sortable.sortable-type-content').each(function () {
    sortable_type_content($(this));
});
$('[data-init-plugin=select2]').select2();
summernote_init();