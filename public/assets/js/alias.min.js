var key_code_array = [96, 126, 60, 62, 34, 39, 92];
$(document).on('keypress', '.alias-check', function (e) { 
    var keycode = (e.keyCode ? e.keyCode : e.which);
    var $this = $(this);
    if (keycode == 32) {
        e.preventDefault();
        var value = $this.val();
        $this.val(value + '-'); 
        return false;
    } 
    else if (keycode == 13) {
        $this.parents('.alias-edit').find('.btn-update').trigger('click');
    }
    else if (key_code_array.indexOf(keycode) != -1) { 
        e.preventDefault();
        return false;
    }
});
$(document).on('click', '.btn-edit', function (e) {
    e.preventDefault();
    var $parent = $(this).parents('tr.alias-item'); 
    $parent.parents('tbody').find('.btn-cancel').trigger('click');
    $.ajax({
        url: generate_url,
        type: 'POST',
        data: {type: 'desktop', id: $parent.find('.alias-index').val(), alias: $parent.find('.alias-value').val()},
        success: function (response) {
            $parent.after(response.html);
            $('.alias-edit').slideDown('fast');
            $('.alias-edit .alias-value').focus();
        }
    });
});
$(document).on('click', '.btn-edit-mobile', function (e) {
    e.preventDefault();
    var $parent = $(this).parents('tr.alias-item'); 
    $.ajax({
        url: generate_url,
        type: 'POST',
        data: {type: 'mobile', id: $parent.find('.alias-index').val(), alias: $parent.find('.alias-value').val()},
        success: function (response) {
            $('body').after(response.html);
            $('.alias-modal').modal('show');
        }
    });
});
$(document).on('click', '.btn-update', function (e) { 
    e.preventDefault(); 
    var $parent = $(this).parents('.alias-edit'); 
    var index = $parent.find('.alias-index').val(); 
    var alias = $parent.find('.alias-value').val();
    if (index != '' && alias != '') {
        $.ajax({
            url: update_url,
            data: {id: index, alias: alias},
            type: 'post',
            async: false,
            success: function (response) {
                if (response.status == 'success') {
                    var $item = $('tr.alias-item-'+index);
                    $item.find('.alias-value').val(alias); 
                    $item.find('.alias-display').text(alias);
                    notify_bar('success', 'Web alias has successfully been updated.');
                    if ($parent.data('type') == 'desktop') {
                        $parent.slideUp('fast', function (e) { $(this).remove(); });
                    }
                    else {
                        $('.alias-modal').modal('hide');
                    }
                }
                else {
                    notify_bar('danger', response.msg);
                }
            },
            statusCode: {
                500: function () { notify_reload('danger', 'Something went wrong. please try again later.'); },
                422: function (response) { notify_bar('danger', response.responseJSON.errors.alias); },
                403: function () { notify_reload('danger', 'Something went wrong. please try again later.'); }
            }
        });
    } 
    else {
        notify_bar('danger', 'Please enter a unique web alias before updating.');
    }
});
$(document).on('click', '.btn-cancel', function (e) { 
    e.preventDefault(); 
    $(this).parents('tr').slideUp('fast', function (e) { $(this).remove(); }); 
});
$(document).on('click', '.btn-change-status', function (e) { 
    e.preventDefault(); 
    var $this = $(this);
    Swal.fire({
        title: 'Are you sure?',
        text: "",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, change it!'
    }).then((result) => {
        if (result.value) {
            var $parent = $this.parents('tr.alias-item');
            var parent_id = $parent.find('.alias-parent').val();
            var type = $parent.find('.alias-parent').data('type');
            $.ajax({
                url: status_url,
                type: 'POST',
                data: {parent_id: parent_id, type: type},
                success: function (response) {
                    if (response == 10) {
                        $parent.find('.alias-status').html('<strong class="text-success">PUBLISHED</strong>');
                        $this.find('span').html('UNPUBLISH');
                        notify_bar('success', 'The '+type.replace(/_/gi, " ").toUpperCase()+' has been PUBLISHED.');
                    }
                    else if (response == 0) {
                        $parent.find('.alias-status').html('<strong class="text-danger">UNPUBLISHED</strong>');
                        $this.find('span').html('PUBLISH');
                        notify_bar('success', 'The '+type.replace(/_/gi, " ").toUpperCase()+' has been UNPUBLISHED.');
                    }
                    else {
                        notify_reload('error', 'Something went wrong. please try again later.');
                    }
                }
            });
        }
    });   
});