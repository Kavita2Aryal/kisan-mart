(function($){$.fn.sortableLists=function(options){var jQBody=$('body').css('position', 'relative'), defaults={currElClass: '', placeholderClass: '', placeholderCss:{'position': 'relative', 'padding': 0}, hintClass: '', hintCss:{'display': 'none', 'position': 'relative', 'padding': 0}, hintWrapperClass: '', hintWrapperCss:{}, baseClass: '', baseCss:{'position': 'absolute', 'top': 0 - parseInt(jQBody.css('margin-top')), 'left': 0 - parseInt(jQBody.css('margin-left')), 'margin': 0, 'padding': 0, 'z-index': 2500}, opener:{active: false, open: '', close: '', openerCss:{'float': 'left', 'display': 'inline-block', 'background-position': 'center center', 'background-repeat': 'no-repeat'}, openerClass: ''}, listSelector: 'ul', listsClass: '', listsCss:{}, insertZone: 50, insertZonePlus: false, scroll: 20, ignoreClass: '', isAllowed: function(cEl, hint, target){return true;}, onDragStart: function(e, cEl){return true;}, onChange: function(cEl){return true;}, complete: function(cEl){return true;}}, setting=$.extend(true,{}, defaults, options), base=$('<' + setting.listSelector + '/>').prependTo(jQBody).attr('id', 'sortableListsBase').css(setting.baseCss).addClass(setting.listsClass + ' ' + setting.baseClass), placeholder=$('<li/>').attr('id', 'sortableListsPlaceholder').css(setting.placeholderCss).addClass(setting.placeholderClass), hint=$('<li/>').attr('id', 'sortableListsHint').css(setting.hintCss).addClass(setting.hintClass), hintWrapper=$('<' + setting.listSelector + '/>').attr('id', 'sortableListsHintWrapper').addClass(setting.listsClass + ' ' + setting.hintWrapperClass).css(setting.listsCss).css(setting.hintWrapperCss), opener=$('<span/>').addClass('sortableListsOpener ' + setting.opener.openerClass).css(setting.opener.openerCss).on('mousedown touchstart', function(e){var li=$(this).closest('li'); if (li.hasClass('sortableListsClosed')){open(li);}else{close(li);}return false;}); if (setting.opener.as=='class'){opener.addClass(setting.opener.close);}else if (setting.opener.as=='html'){opener.html(setting.opener.close);}else{opener.css('background-image', 'url(' + setting.opener.close + ')');}var state={isDragged: false, isRelEFP: null, oEl: null, rootEl: null, cEl: null, upScroll: false, downScroll: false, pX: 0, pY: 0, cX: 0, cY: 0, isAllowed: true, e:{pageX: 0, pageY: 0, clientX: 0, clientY: 0}, doc: $(document), win: $(window)}; if (setting.opener.active){if (!setting.opener.open) throw 'Opener.open value is not defined. It should be valid url, html or css class.'; if (!setting.opener.close) throw 'Opener.close value is not defined. It should be valid url, html or css class.'; $(this).find('li').each(function(){var li=$(this); if (li.children(setting.listSelector).length){opener.clone(true).prependTo(li.children('div').first()); if (!li.hasClass('sortableListsOpen')){close(li);}else{open(li);}}});}return this.on('mousedown touchstart', function(e){var target=$(e.target); if (state.isDragged !==false || (setting.ignoreClass && target.hasClass(setting.ignoreClass))) return; e.preventDefault(); if (e.type==='touchstart'){setTouchEvent(e);}var el=target.closest('li'), rEl=$(this); if (el[0]){setting.onDragStart(e, el); startDrag(e, el, rEl);}}); function startDrag(e, el, rEl){state.isDragged=true; var elMT=parseInt(el.css('margin-top')), elMB=parseInt(el.css('margin-bottom')), elML=parseInt(el.css('margin-left')), elMR=parseInt(el.css('margin-right')), elXY=el.offset(), elIH=el.innerHeight(); state.rootEl={el: rEl, offset: rEl.offset(), rootElClass: rEl.attr('class')}; state.cEl={el: el, mT: elMT, mL: elML, mB: elMB, mR: elMR, offset: elXY}; state.cEl.xyOffsetDiff={X: e.pageX - state.cEl.offset.left, Y: e.pageY - state.cEl.offset.top}; state.cEl.el.addClass('sortableListsCurrent' + ' ' + setting.currElClass); el.before(placeholder); var placeholderNode=state.placeholderNode=$('#sortableListsPlaceholder'); el.css({'width': el.width(), 'position': 'absolute', 'top': elXY.top - elMT, 'left': elXY.left - elML}).prependTo(base); placeholderNode.css({'display': 'block', 'height': elIH}); hint.css('height', elIH); state.doc.on('mousemove touchmove', dragging).on('mouseup touchend touchcancel', endDrag);}function dragging(e){if (state.isDragged){var cEl=state.cEl, doc=state.doc, win=state.win; if (e.type==='touchmove'){setTouchEvent(e);}if (!e.pageX){setEventPos(e);}if (doc.scrollTop() > state.rootEl.offset.top - 10 && e.clientY < 50){if (!state.upScroll){setScrollUp(e);}else{e.pageY=e.pageY - setting.scroll; $('html, body').each(function(i){$(this).scrollTop($(this).scrollTop() - setting.scroll);}); setCursorPos(e);}}else if (doc.scrollTop() + win.height() < state.rootEl.offset.top + state.rootEl.el.outerHeight(false) + 10 && win.height() - e.clientY < 50){if (!state.downScroll){setScrollDown(e);}else{e.pageY=e.pageY + setting.scroll; $('html, body').each(function(i){$(this).scrollTop($(this).scrollTop() + setting.scroll);}); setCursorPos(e);}}else{scrollStop(state);}state.oElOld=state.oEl; cEl.el[0].style.visibility='hidden'; state.oEl=oEl=elFromPoint(e.pageX, e.pageY); cEl.el[0].style.visibility='visible'; showHint(e, state); setCElPos(e, state);}}function endDrag(e){var cEl=state.cEl, hintNode=$('#sortableListsHint', state.rootEl.el), hintStyle=hint[0].style, targetEl=null, isHintTarget=false, hintWrapperNode=$('#sortableListsHintWrapper'); if (e.type==='touchend' || e.type==='touchcancel'){setTouchEvent(e);}if (hintStyle.display=='block' && hintNode.length && state.isAllowed){targetEl=hintNode; isHintTarget=true;}else{targetEl=state.placeholderNode; isHintTarget=false;}offset=targetEl.offset(); cEl.el.animate({left: offset.left - state.cEl.mL, top: offset.top - state.cEl.mT}, 250, function(){tidyCurrEl(cEl); targetEl.after(cEl.el[0]); targetEl[0].style.display='none'; hintStyle.display='none'; hintNode.remove(); hintWrapperNode.removeAttr('id').removeClass(setting.hintWrapperClass); if (hintWrapperNode.length){hintWrapperNode.prev('div').prepend(opener.clone(true));}if (isHintTarget){state.placeholderNode.slideUp(150, function(){state.placeholderNode.remove(); tidyEmptyLists(); setting.onChange(cEl.el); setting.complete(cEl.el); state.isDragged=false;});}else{state.placeholderNode.remove(); tidyEmptyLists(); setting.complete(cEl.el); state.isDragged=false;}}); scrollStop(state); state.doc.unbind("mousemove touchmove", dragging).unbind("mouseup touchend touchcancel", endDrag);}function setScrollUp(e){if (state.upScroll) return; state.upScroll=setInterval(function(){state.doc.trigger('mousemove');}, 50);}function setScrollDown(e){if (state.downScroll) return; state.downScroll=setInterval(function(){state.doc.trigger('mousemove');}, 50);}function setCursorPos(e){state.pY=e.pageY; state.pX=e.pageX; state.cY=e.clientY; state.cX=e.clientX;}function setEventPos(e){e.pageY=state.pY; e.pageX=state.pX; e.clientY=state.cY; e.clientX=state.cX;}function scrollStop(state){clearInterval(state.upScroll); clearInterval(state.downScroll); state.upScroll=state.downScroll=false;}function setTouchEvent(e){e.pageX=e.originalEvent.changedTouches[0].pageX; e.pageY=e.originalEvent.changedTouches[0].pageY; e.screenX=e.originalEvent.changedTouches[0].screenX; e.screenY=e.originalEvent.changedTouches[0].screenY;}function setCElPos(e, state){var cEl=state.cEl; cEl.el.css({'top': e.pageY - cEl.xyOffsetDiff.Y - cEl.mT, 'left': e.pageX - cEl.xyOffsetDiff.X - cEl.mL})}function elFromPoint(x, y){if (!document.elementFromPoint) return null; var isRelEFP=state.isRelEFP; if (isRelEFP===null){var s, res; if ((s=state.doc.scrollTop()) > 0){isRelEFP=((res=document.elementFromPoint(0, s + $(window).height() - 1))==null || res.tagName.toUpperCase()=='HTML');}if ((s=state.doc.scrollLeft()) > 0){isRelEFP=((res=document.elementFromPoint(s + $(window).width() - 1, 0))==null || res.tagName.toUpperCase()=='HTML');}}if (isRelEFP){x -=state.doc.scrollLeft(); y -=state.doc.scrollTop();}var el=$(document.elementFromPoint(x, y)); if (!state.rootEl.el.find(el).length){return null;}else if (el.is('#sortableListsPlaceholder') || el.is('#sortableListsHint')){return null;}else if (!el.is('li')){el=el.closest('li'); return el[0] ? el : null;}else if (el.is('li')){return el;}}function showHint(e, state){var oEl=state.oEl; if (!oEl || !state.oElOld) return; var oElH=oEl.outerHeight(false), relY=e.pageY - oEl.offset().top; if (setting.insertZonePlus){if (14 > relY){showOnTopPlus(e, oEl, 7 > relY);}else if (oElH - 14 < relY){showOnBottomPlus(e, oEl, oElH - 7 < relY);}}else{if (5 > relY){showOnTop(e, oEl);}else if (oElH - 5 < relY){showOnBottom(e, oEl);}}}function showOnTop(e, oEl){if ($('#sortableListsHintWrapper', state.rootEl.el).length){hint.unwrap();}if (e.pageX - oEl.offset().left < setting.insertZone){if (oEl.prev('#sortableListsPlaceholder').length){hint.css('display', 'none'); return;}oEl.before(hint);}else{var children=oEl.children(), list=oEl.children(setting.listSelector).first(); if (list.children().first().is('#sortableListsPlaceholder')){hint.css('display', 'none'); return;}if (!list.length){children.first().after(hint); hint.wrap(hintWrapper);}else{list.prepend(hint);}if (state.oEl){open(oEl);}}hint.css('display', 'block'); state.isAllowed=setting.isAllowed(state.cEl.el, hint, hint.parents('li').first());}function showOnTopPlus(e, oEl, outside){if ($('#sortableListsHintWrapper', state.rootEl.el).length){hint.unwrap();}if (!outside && e.pageX - oEl.offset().left > setting.insertZone){var children=oEl.children(), list=oEl.children(setting.listSelector).first(); if (list.children().first().is('#sortableListsPlaceholder')){hint.css('display', 'none'); return;}if (!list.length){children.first().after(hint); hint.wrap(hintWrapper);}else{list.prepend(hint);}if (state.oEl){open(oEl);}}else{if (oEl.prev('#sortableListsPlaceholder').length){hint.css('display', 'none'); return;}oEl.before(hint);}hint.css('display', 'block'); state.isAllowed=setting.isAllowed(state.cEl.el, hint, hint.parents('li').first());}function showOnBottom(e, oEl){if ($('#sortableListsHintWrapper', state.rootEl.el).length){hint.unwrap();}if (e.pageX - oEl.offset().left < setting.insertZone){if (oEl.next('#sortableListsPlaceholder').length){hint.css('display', 'none'); return;}oEl.after(hint);}else{var children=oEl.children(), list=oEl.children(setting.listSelector).last(); if (list.children().last().is('#sortableListsPlaceholder')){hint.css('display', 'none'); return;}if (list.length){children.last().append(hint);}else{oEl.append(hint); hint.wrap(hintWrapper);}if (state.oEl){open(oEl);}}hint.css('display', 'block'); state.isAllowed=setting.isAllowed(state.cEl.el, hint, hint.parents('li').first());}function showOnBottomPlus(e, oEl, outside){if ($('#sortableListsHintWrapper', state.rootEl.el).length){hint.unwrap();}if (!outside && e.pageX - oEl.offset().left > setting.insertZone){var children=oEl.children(), list=oEl.children(setting.listSelector).last(); if (list.children().last().is('#sortableListsPlaceholder')){hint.css('display', 'none'); return;}if (list.length){children.last().append(hint);}else{oEl.append(hint); hint.wrap(hintWrapper);}if (state.oEl){open(oEl);}}else{if (oEl.next('#sortableListsPlaceholder').length){hint.css('display', 'none'); return;}oEl.after(hint);}hint.css('display', 'block'); state.isAllowed=setting.isAllowed(state.cEl.el, hint, hint.parents('li').first());}function open(li){li.removeClass('sortableListsClosed').addClass('sortableListsOpen'); li.children(setting.listSelector).css('display', 'block'); var opener=li.children('div').children('.sortableListsOpener').first(); if (setting.opener.as=='html'){opener.html(setting.opener.close);}else if (setting.opener.as=='class'){opener.addClass(setting.opener.close).removeClass(setting.opener.open);}else{opener.css('background-image', 'url(' + setting.opener.close + ')');}}function close(li){li.removeClass('sortableListsOpen').addClass('sortableListsClosed'); li.children(setting.listSelector).css('display', 'none'); var opener=li.children('div').children('.sortableListsOpener').first(); if (setting.opener.as=='html'){opener.html(setting.opener.open);}else if (setting.opener.as=='class'){opener.addClass(setting.opener.open).removeClass(setting.opener.close);}else{opener.css('background-image', 'url(' + setting.opener.open + ')');}}function tidyCurrEl(cEl){var cElStyle=cEl.el[0].style; cEl.el.removeClass(setting.currElClass + ' ' + 'sortableListsCurrent'); cElStyle.top='0'; cElStyle.left='0'; cElStyle.position='relative'; cElStyle.width='auto';}function tidyEmptyLists(){$(setting.listSelector, state.rootEl.el).each(function(i){if (!$(this).children().length){$(this).prev('div').children('.sortableListsOpener').first().remove(); $(this).remove();}});}}; $.fn.iconOpen=function(setting){this.removeClass('sortableListsClosed').addClass('sortableListsOpen'); this.children('ul').css('display', 'block'); var opener=this.children('div').children('.sortableListsOpener').first(); if (setting.opener.as==='html'){opener.html(setting.opener.close);}else if (setting.opener.as==='class'){opener.addClass(setting.opener.close).removeClass(setting.opener.open);}}; $.fn.iconClose=function(setting){this.removeClass('sortableListsOpen').addClass('sortableListsClosed'); this.children('ul').css('display', 'none'); var opener=this.children('div').children('.sortableListsOpener').first(); if (setting.opener.as==='html'){opener.html(setting.opener.open);}else if (setting.opener.as==='class'){opener.addClass(setting.opener.open).removeClass(setting.opener.close);}}; $.fn.sortableListsToJson=function(){var arr=[]; $(this).children('li').each(function(){var li=$(this); var object=li.data(); arr.push(object); var ch=li.children('ul,ol').sortableListsToJson(); if (ch.length > 0){object.children=ch;}else{delete object.children;}}); return arr;}; $.fn.updateButtons=function(depth){var level=(typeof depth==='undefined') ? 0 : depth; var removefirst=['Up', 'In']; var removelast=['Down']; if (level===0){removefirst.push('Out'); removelast.push('Out'); $(this).children('li').hideButtons(['Out']);}$(this).children('li').each(function(){var $li=$(this); var $ul=$li.children('ul'); if ($ul.length > 0){$ul.updateButtons(level + 1);}}); $(this).children('li:first').hideButtons(removefirst); $(this).children('li:last').hideButtons(removelast);}; $.fn.hideButtons=function(buttons){for (var i=0; i < buttons.length; i++){$(this).find('.btn-group:first').children(".btn" + buttons[i]).hide();}};}(jQuery));function MenuEditor(idSelector, options){var $main=$("#" + idSelector); var settings={listOptions:{hintCss:{border: '1px dashed #13981D'}, opener:{as: 'html', close: '<i class="pg-icon">minus</i>', open: '<i class="pg-icon">plus</i>', openerCss:{'margin-right': '10px', 'float': 'none'}, openerClass: 'btn btn-default',}, placeholderCss:{'background-color': 'gray'}, ignoreClass: 'clickable', listsClass: "p-l-0", listsCss:{"padding-top": "10px"}, complete: function(cEl){MenuEditor.updateButtons($main); return true;}}}; $.extend(true, settings, options); var itemEditing=null; var sortableReady=true; var $form=null; var $inputURL=null; var $addButton=null; var $updateButton=null; var options=settings.listOptions; $main.sortableLists(settings.listOptions); $(document).on('click', '.btnRemove', function(e){e.preventDefault(); Swal.fire({title: 'Are you sure?', text: "", icon: 'warning', showCancelButton: true, confirmButtonColor: '#3085d6', cancelButtonColor: '#d33', confirmButtonText: 'Yes, remove it!'}).then((result)=>{if (result.value){var list=$(this).closest('ul'); $(this).closest('li').remove(); var isMainContainer=false; if (typeof list.attr('id') !=='undefined'){isMainContainer=(list.attr('id').toString()===idSelector);}if ((!list.children().length) && (!isMainContainer)){list.prev('div').children('.sortableListsOpener').first().remove(); list.remove();}MenuEditor.updateButtons($main);}});}); $(document).on('click', '.btnEdit', function(e){e.preventDefault(); itemEditing=$(this).closest('li'); editItem(itemEditing);}); $main.on('click', '.btnUp', function(e){e.preventDefault(); var $li=$(this).closest('li'); $li.prev('li').before($li); MenuEditor.updateButtons($main);}); $main.on('click', '.btnDown', function(e){e.preventDefault(); var $li=$(this).closest('li'); $li.next('li').after($li); MenuEditor.updateButtons($main);}); $main.on('click', '.btnOut', function(e){e.preventDefault(); var list=$(this).closest('ul'); var $li=$(this).closest('li'); var $liParent=$li.closest('ul').closest('li'); $liParent.after($li); if (list.children().length <=0){list.prev('div').children('.sortableListsOpener').first().remove(); list.remove();}MenuEditor.updateButtons($main);}); $main.on('click', '.btnIn', function(e){e.preventDefault(); var $li=$(this).closest('li'); var $prev=$li.prev('li'); if ($prev.length > 0){var $ul=$prev.children('ul'); if ($ul.length > 0) $ul.append($li); else{var $ul=$('<ul>').addClass('p-l-0').css('padding-top', '10px'); $prev.append($ul); $ul.append($li); $prev.addClass('sortableListsOpen'); TOpener($prev);}}MenuEditor.updateButtons($main);}); function editItem($item){var data=$item.data(); $.each(data, function(p, v){$form.find("[name=" + p + "]").val(v); if (p=='type' && (v !='external' && v !='' && typeof(v) !=='undefined')){$inputURL.attr('readonly', true); $addButton.attr('disabled', true);}else{$inputURL.removeAttr('readonly'); $addButton.removeAttr('disabled');}}); $form.find(".item-menu").first().focus(); $updateButton.removeAttr('disabled');}function resetForm(){$form[0].reset(); $inputURL.removeAttr('readonly'); $addButton.removeAttr('disabled'); $updateButton.attr('disabled', true); itemEditing=null;}function stringToArray(str){try{var obj=JSON.parse(str);}catch (err){console.log('The string is not a json valid.'); return null;}return obj;}function TButton(attr){return $("<a>").addClass(attr.classCss).addClass('clickable').attr("href", "#").html(attr.text);}function TButtonGroup(){var $divbtn=$('<div>').addClass('btn-group float-right'); var $btnEdit=TButton({classCss: 'btn btn-default btnEdit', text: '<i class="pg-icon clickable">pencil</i>'}); var $btnRemv=TButton({classCss: 'btn btn-default btnRemove', text: '<i class="pg-icon clickable">trash_alt</i>'}); var $btnUp=TButton({classCss: 'btn btn-default btnUp btnMove', text: '<i class="pg-icon clickable">chevron_up</i>'}); var $btnDown=TButton({classCss: 'btn btn-default btnDown btnMove', text: '<i class="pg-icon clickable">chevron_down</i>'}); var $btnOut=TButton({classCss: 'btn btn-default btnOut btnMove', text: '<i class="pg-icon clickable">arrow_down</i>'}); var $btnIn=TButton({classCss: 'btn btn-default btnIn btnMove', text: '<i class="pg-icon clickable">arrow_up</i>'}); $divbtn.append($btnUp).append($btnDown).append($btnIn).append($btnOut).append($btnEdit).append($btnRemv); return $divbtn;}function createMenu(arrayItem, depth){var level=(typeof(depth)==='undefined') ? 0 : depth; var $elem=(level===0) ? $main : $('<ul>').addClass('p-l-0').css('padding-top', '10px'); $.each(arrayItem, function(k, v){var isParent=(typeof(v.children) !=="undefined") && ($.isArray(v.children)); var itemObject={text: "", href: "", target: "_self", index: 0, type: "external"}; var temp=$.extend({}, v); if (isParent){delete temp['children'];}$.extend(itemObject, temp); var $li=$('<li>').addClass('list-group-item'); $li.data(itemObject); var $div=$('<div>').css('overflow', 'auto'); var $span=$('<span>').addClass('txt').append(v.text).css('margin-right', '5px'); var $divbtn=TButtonGroup(); $div.append($span).append($divbtn); $li.append($div); if (isParent){$li.append(createMenu(v.children, level + 1));}$elem.append($li);}); return $elem;}function TOpener(li){var opener=$('<span>').addClass('sortableListsOpener ' + options.opener.openerClass).css(options.opener.openerCss).on('mousedown touchstart', function(e){var li=$(this).closest('li'); if (li.hasClass('sortableListsClosed')){li.iconOpen(options);}else{li.iconClose(options);}return false;}); opener.prependTo(li.children('div').first()); if (!li.hasClass('sortableListsOpen')){li.iconClose(options);}else{li.iconOpen(options);}}function setOpeners(){$main.find('li').each(function(){var $li=$(this); if ($li.children('ul').length){TOpener($li);}});}this.setForm=function(form){$form=form;}; this.getForm=function(){return $form;}; this.setInputURL=function($ipnut){$inputURL=$ipnut;}; this.setAddButton=function($btn){$addButton=$btn;}; this.setUpdateButton=function($btn){$updateButton=$btn; $updateButton.attr('disabled', true); itemEditing=null;}; this.getUpdateButton=function(){return $updateButton;}; this.getCurrentItem=function(){return itemEditing;}; this.update=function(){var $cEl=this.getCurrentItem(); if ($cEl===null){return;}$form.find('.item-menu').each(function(){$cEl.data($(this).attr('name'), $(this).val());}); $cEl.find('span.txt').first().text($cEl.data('text')); resetForm();}; this.add=function(){var data={}; $form.find('.item-menu').each(function(){data[$(this).attr('name')]=$(this).val();}); var btnGroup=TButtonGroup(); var textItem=$('<span>').addClass('txt').text(data.text); var div=$('<div>').css({"overflow": "auto"}).append(textItem).append(btnGroup); var $li=$("<li>").data(data); $li.addClass('list-group-item').append(div); $main.append($li); MenuEditor.updateButtons($main); resetForm();}; this.getString=function(){var obj=$main.sortableListsToJson(); return JSON.stringify(obj);}; this.setData=function(strJson){var arrayItem=(Array.isArray(strJson)) ? strJson : stringToArray(strJson); if (arrayItem !==null){$main.empty(); var menu=createMenu(arrayItem); if (!sortableReady){menu.sortableLists(settings.listOptions); sortableReady=true;}else{setOpeners();}MenuEditor.updateButtons($main);}};};MenuEditor.updateButtons=function($mainList){$mainList.find('.btnMove').show(); $mainList.updateButtons();};